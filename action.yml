name: 'TraceMOP Action'
description: 'Run Maven project with TraceMOP'
inputs:
  collect-traces:
    description: 'Whether to collect traces using TraceMOP'
    required: true
    default: true
  output-directory:
    description: 'Output directory for traces'
    required: true
    default: ${{ github.workspace }}/traces
  token:
    description: 'GITHUB TOKEN'
    required: true

runs:
  using: "composite"
  steps:
    - name: Download TraceMOP
      run: |
        git clone https://${TOKEN}@github.com/SoftEngResearch/tracemop_internal tracemop
        pushd tracemop &> /dev/null
        git checkout trie
        popd &> /dev/null
      shell: bash
      env:
        TOKEN: ${{ inputs.token }}

    - name: Install TraceMOP
      run: |
        echo "::group::Install TraceMOP"
        mvn install:install-file -Dfile=tracemop/plugin/src/main/resources/track-no-stats-agent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar"
        echo "::endgroup::"
      shell: bash

    - name: Setup extension and agent
      run: |
        echo "::group::Setup extension"
        cp tracemop/plugin/src/main/resources/javamop-extension-1.0.jar $(mvn --version | grep "Maven home" | cut -d ' ' -f 3)/lib/ext
        echo "::endgroup::"

        echo "::group::Setup agent"
        if [[ ${COLLECT_TRACES} == true ]]; then
          mvn install:install-file -Dfile=tracemop/plugin/src/main/resources/track-no-stats-agent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar"
        else
          mvn install:install-file -Dfile=tracemop/plugin/src/main/resources/no-track-no-stats-agent.jar -DgroupId="javamop-agent" -DartifactId="javamop-agent" -Dversion="1.0" -Dpackaging="jar"
        fi
        echo "::endgroup::"
      shell: bash
      env:
        COLLECT_TRACES: ${{ inputs.collect-traces }}

    - name: Setup TraceMOP
      run: |
        echo "Output directory is ${OUTPUT_DIRECTORY}"
        mkdir -p ${OUTPUT_DIRECTORY}
        echo -e "db=memory\ndumpDB=false" > ${{ github.workspace }}/.trace-db.config

        echo "TRACEDB_CONFIG_PATH=${{ github.workspace }}/.trace-db.config" >> ${GITHUB_ENV}
        echo "TRACEDB_PATH=${OUTPUT_DIRECTORY}" >> ${GITHUB_ENV}
        echo "TRACEDB_RANDOM=1" >> ${GITHUB_ENV}
        echo "COLLECT_MONITORS=1" >> ${GITHUB_ENV}
        echo "COLLECT_TRACES=1" >> ${GITHUB_ENV}
        echo "RVMLOGGINGLEVEL=UNIQUE" >> ${GITHUB_ENV}
      shell: bash
      env:
        OUTPUT_DIRECTORY: ${{ inputs.output-directory }}
    - name: Add exit hook
      uses: pyTooling/Actions/with-post-step@v3.1.1
      with:
        main: |
          echo "Adding exit hook"
        post: |
          echo "Processing traces"
          exec ${{ github.action_path }}/post.sh ${{ github.workspace }}/traces
